{"version":3,"file":"static/js/744.fb468606.chunk.js","mappings":"qNAGaA,EAAOC,EAAAA,GAAAA,GAAH,gJAQJC,EAAOD,EAAAA,GAAAA,GAAH,kN,SCNF,SAASE,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,SAACC,EAAOC,GAAR,OACV,UAACP,EAAD,eAAsBM,EAAME,MAC1B,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,SACGG,EAAMO,UAFCN,U,0MCNpBO,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,sGAGfD,IAAAA,IAAA,uEAHe,uBAEfE,EAFe,EAEvBC,KAAQD,QAFe,kBAIlBA,GAJkB,2CAAH,qDAOXE,EAAQ,mCAAG,WAAMR,GAAN,yFACCI,IAAAA,IAAA,iBAAoBJ,EAApB,8CADD,uBACdO,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKRE,EAAc,mCAAG,WAAMC,GAAN,yFAGlBN,IAAAA,IAAA,uEAA0EM,EAA1E,OAHkB,uBAElBJ,EAFkB,EAE1BC,KAAQD,QAFkB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAS,mCAAG,WAAMX,GAAN,yFACAI,IAAAA,IAAA,iBAAoBJ,EAApB,qEADA,uBACfO,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTK,EAAO,mCAAG,WAAMZ,GAAN,yFACEI,IAAAA,IAAA,iBAAoBJ,EAApB,qEADF,uBACbO,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,uD,sHC3BL,SAASM,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOtB,EAAP,KAAeuB,EAAf,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,MAAcY,MAAK,SAAAV,GAAI,OAAIQ,EAAUR,QACpC,KAGD,4BACE,4CACA,SAAC,IAAD,CAAYf,OAAQA","sources":["components/MovieList/MoviesList.styled.jsx","components/MovieList/MoviesList.js","services/apiService.js","views/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const List = styled.ul`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Item = styled.li`\n  text-decoration: none;\n  margin-right: 30px;\n  margin-top: 10px;\n  text-align: start;\n  font-size: 16px;\n  font-family:Verdana, Geneva, Tahoma, sans-serif\n  border-radius: 2px;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map((movie, index) => (\n        <Item key={ index }> {movie.text}\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n}\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string, \n    })\n  ).isRequired,\n};","import axios from 'axios';\n// ссылочка https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>\n// ключик 9c596d0a0c0e277ef870e9f34838eddd\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTranding = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?page=1&api_key=9c596d0a0c0e277ef870e9f34838eddd`);\n  return results;\n};\n\nexport const getMovie = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=9c596d0a0c0e277ef870e9f34838eddd`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=9c596d0a0c0e277ef870e9f34838eddd&query=${query}\n`);\n  return results;\n};\n\nexport const getReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=9c596d0a0c0e277ef870e9f34838eddd&language=en-US`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=9c596d0a0c0e277ef870e9f34838eddd&language=en-US`);\n  return data;\n};","import { getTranding } from 'services/apiService';\nimport MoviesList from 'components/MovieList/MoviesList';\nimport { useEffect, useState } from 'react';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getTranding().then(data => setMovies(data));\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending Today</h1>\n      <MoviesList movies={movies} />\n    </div>\n  );\n}"],"names":["List","styled","Item","MoviesList","movies","location","useLocation","map","movie","index","text","to","id","state","from","title","axios","getTranding","results","data","getMovie","getSearchMovie","query","getReview","getCast","HomePage","useState","setMovies","useEffect","then"],"sourceRoot":""}